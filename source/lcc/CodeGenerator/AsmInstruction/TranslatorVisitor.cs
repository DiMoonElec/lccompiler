/*
  This file is generated automatically by 'TranslatorGenerator.py'.
  To make changes, modify the 'AsmInstruction.cs', 'AsmArithmetiñInstruction', 'AsmInstructionTypeConvert',
  and re-generate this file.
*/

namespace LC2.LCCompiler.CodeGenerator.AsmInstruction
{
  abstract class TranslatorVisitor
  {
    public abstract void Generate(INSTR_LABEL instruction);
    public abstract void Generate(INSTR_RET instruction);
    public abstract void Generate(INSTR_HALT instruction);
    public abstract void Generate(INSTR_STORE_1 instruction);
    public abstract void Generate(INSTR_STORE_2 instruction);
    public abstract void Generate(INSTR_STORE_4 instruction);
    public abstract void Generate(INSTR_STORE_8 instruction);
    public abstract void Generate(INSTR_GSTORE_1 instruction);
    public abstract void Generate(INSTR_GSTORE_2 instruction);
    public abstract void Generate(INSTR_GSTORE_4 instruction);
    public abstract void Generate(INSTR_GSTORE_8 instruction);
    public abstract void Generate(INSTR_ASTORE_1 instruction);
    public abstract void Generate(INSTR_ASTORE_2 instruction);
    public abstract void Generate(INSTR_ASTORE_4 instruction);
    public abstract void Generate(INSTR_ASTORE_8 instruction);
    public abstract void Generate(INSTR_ALOAD_1 instruction);
    public abstract void Generate(INSTR_ALOAD_2 instruction);
    public abstract void Generate(INSTR_ALOAD_4 instruction);
    public abstract void Generate(INSTR_ALOAD_8 instruction);
    public abstract void Generate(INSTR_LOAD_1 instruction);
    public abstract void Generate(INSTR_LOAD_2 instruction);
    public abstract void Generate(INSTR_LOAD_4 instruction);
    public abstract void Generate(INSTR_LOAD_8 instruction);
    public abstract void Generate(INSTR_GLOAD_1 instruction);
    public abstract void Generate(INSTR_GLOAD_2 instruction);
    public abstract void Generate(INSTR_GLOAD_4 instruction);
    public abstract void Generate(INSTR_GLOAD_8 instruction);
    public abstract void Generate(INSTR_PUSH_1 instruction);
    public abstract void Generate(INSTR_PUSH_2 instruction);
    public abstract void Generate(INSTR_PUSH_4 instruction);
    public abstract void Generate(INSTR_PUSH_4_MEM_OBJ instruction);
    public abstract void Generate(INSTR_PUSH_8 instruction);
    public abstract void Generate(INSTR_DUP instruction);
    public abstract void Generate(INSTR_DUP_2 instruction);
    public abstract void Generate(INSTR_DROP instruction);
    public abstract void Generate(INSTR_DROP_2 instruction);
    public abstract void Generate(INSTR_IFFALSE instruction);
    public abstract void Generate(INSTR_IFFALSE_S instruction);
    public abstract void Generate(INSTR_IFFALSE_T instruction);
    public abstract void Generate(INSTR_IFTRUE instruction);
    public abstract void Generate(INSTR_IFTRUE_S instruction);
    public abstract void Generate(INSTR_IFTRUE_T instruction);
    public abstract void Generate(INSTR_JMP instruction);
    public abstract void Generate(INSTR_JMP_S instruction);
    public abstract void Generate(INSTR_JMP_T instruction);
    public abstract void Generate(INSTR_INCR_FP instruction);
    public abstract void Generate(INSTR_INCR_FP_T instruction);
    public abstract void Generate(INSTR_DECR_FP instruction);
    public abstract void Generate(INSTR_DECR_FP_T instruction);
    public abstract void Generate(INSTR_LOAD_FP instruction);
    public abstract void Generate(INSTR_CALL instruction);
    public abstract void Generate(INSTR_CALL_S instruction);
    public abstract void Generate(INSTR_CALL_T instruction);
    public abstract void Generate(INSTR_SYSCALL instruction);
    public abstract void Generate(INSTR_SYSCALL_T instruction);
    public abstract void Generate(INSTR_INCR instruction);
    public abstract void Generate(INSTR_DECR instruction);
    public abstract void Generate(INSTR_INV instruction);
    public abstract void Generate(INSTR_MUL instruction);
    public abstract void Generate(INSTR_DIV instruction);
    public abstract void Generate(INSTR_ADD instruction);
    public abstract void Generate(INSTR_SUB instruction);
    public abstract void Generate(INSTR_LESS instruction);
    public abstract void Generate(INSTR_LESSEQ instruction);
    public abstract void Generate(INSTR_MORE instruction);
    public abstract void Generate(INSTR_MOREEQ instruction);
    public abstract void Generate(INSTR_EQ instruction);
    public abstract void Generate(INSTR_NEQ instruction);
    public abstract void Generate(INSTR_REM instruction);
    public abstract void Generate(INSTR_RSHIFT instruction);
    public abstract void Generate(INSTR_LSHIFT instruction);
    public abstract void Generate(INSTR_AND instruction);
    public abstract void Generate(INSTR_XOR instruction);
    public abstract void Generate(INSTR_OR instruction);
    public abstract void Generate(INSTR_NOT instruction);
    public abstract void Generate(INSTR_BOOL_TO_INT8 instruction);
    public abstract void Generate(INSTR_BOOL_TO_UINT8 instruction);
    public abstract void Generate(INSTR_BOOL_TO_INT16 instruction);
    public abstract void Generate(INSTR_BOOL_TO_UINT16 instruction);
    public abstract void Generate(INSTR_BOOL_TO_INT32 instruction);
    public abstract void Generate(INSTR_BOOL_TO_UINT32 instruction);
    public abstract void Generate(INSTR_BOOL_TO_INT64 instruction);
    public abstract void Generate(INSTR_BOOL_TO_UINT64 instruction);
    public abstract void Generate(INSTR_BOOL_TO_FLOAT instruction);
    public abstract void Generate(INSTR_BOOL_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_INT8_TO_BOOL instruction);
    public abstract void Generate(INSTR_INT8_TO_UINT8 instruction);
    public abstract void Generate(INSTR_INT8_TO_INT16 instruction);
    public abstract void Generate(INSTR_INT8_TO_UINT16 instruction);
    public abstract void Generate(INSTR_INT8_TO_INT32 instruction);
    public abstract void Generate(INSTR_INT8_TO_UINT32 instruction);
    public abstract void Generate(INSTR_INT8_TO_INT64 instruction);
    public abstract void Generate(INSTR_INT8_TO_UINT64 instruction);
    public abstract void Generate(INSTR_INT8_TO_FLOAT instruction);
    public abstract void Generate(INSTR_INT8_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_UINT8_TO_BOOL instruction);
    public abstract void Generate(INSTR_UINT8_TO_INT8 instruction);
    public abstract void Generate(INSTR_UINT8_TO_INT16 instruction);
    public abstract void Generate(INSTR_UINT8_TO_UINT16 instruction);
    public abstract void Generate(INSTR_UINT8_TO_INT32 instruction);
    public abstract void Generate(INSTR_UINT8_TO_UINT32 instruction);
    public abstract void Generate(INSTR_UINT8_TO_INT64 instruction);
    public abstract void Generate(INSTR_UINT8_TO_UINT64 instruction);
    public abstract void Generate(INSTR_UINT8_TO_FLOAT instruction);
    public abstract void Generate(INSTR_UINT8_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_INT16_TO_BOOL instruction);
    public abstract void Generate(INSTR_INT16_TO_INT8 instruction);
    public abstract void Generate(INSTR_INT16_TO_UINT8 instruction);
    public abstract void Generate(INSTR_INT16_TO_UINT16 instruction);
    public abstract void Generate(INSTR_INT16_TO_INT32 instruction);
    public abstract void Generate(INSTR_INT16_TO_UINT32 instruction);
    public abstract void Generate(INSTR_INT16_TO_INT64 instruction);
    public abstract void Generate(INSTR_INT16_TO_UINT64 instruction);
    public abstract void Generate(INSTR_INT16_TO_FLOAT instruction);
    public abstract void Generate(INSTR_INT16_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_UINT16_TO_BOOL instruction);
    public abstract void Generate(INSTR_UINT16_TO_INT8 instruction);
    public abstract void Generate(INSTR_UINT16_TO_UINT8 instruction);
    public abstract void Generate(INSTR_UINT16_TO_INT16 instruction);
    public abstract void Generate(INSTR_UINT16_TO_INT32 instruction);
    public abstract void Generate(INSTR_UINT16_TO_UINT32 instruction);
    public abstract void Generate(INSTR_UINT16_TO_INT64 instruction);
    public abstract void Generate(INSTR_UINT16_TO_UINT64 instruction);
    public abstract void Generate(INSTR_UINT16_TO_FLOAT instruction);
    public abstract void Generate(INSTR_UINT16_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_INT32_TO_BOOL instruction);
    public abstract void Generate(INSTR_INT32_TO_INT8 instruction);
    public abstract void Generate(INSTR_INT32_TO_UINT8 instruction);
    public abstract void Generate(INSTR_INT32_TO_INT16 instruction);
    public abstract void Generate(INSTR_INT32_TO_UINT16 instruction);
    public abstract void Generate(INSTR_INT32_TO_UINT32 instruction);
    public abstract void Generate(INSTR_INT32_TO_INT64 instruction);
    public abstract void Generate(INSTR_INT32_TO_UINT64 instruction);
    public abstract void Generate(INSTR_INT32_TO_FLOAT instruction);
    public abstract void Generate(INSTR_INT32_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_UINT32_TO_BOOL instruction);
    public abstract void Generate(INSTR_UINT32_TO_INT8 instruction);
    public abstract void Generate(INSTR_UINT32_TO_UINT8 instruction);
    public abstract void Generate(INSTR_UINT32_TO_INT16 instruction);
    public abstract void Generate(INSTR_UINT32_TO_UINT16 instruction);
    public abstract void Generate(INSTR_UINT32_TO_INT32 instruction);
    public abstract void Generate(INSTR_UINT32_TO_INT64 instruction);
    public abstract void Generate(INSTR_UINT32_TO_UINT64 instruction);
    public abstract void Generate(INSTR_UINT32_TO_FLOAT instruction);
    public abstract void Generate(INSTR_UINT32_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_INT64_TO_BOOL instruction);
    public abstract void Generate(INSTR_INT64_TO_INT8 instruction);
    public abstract void Generate(INSTR_INT64_TO_UINT8 instruction);
    public abstract void Generate(INSTR_INT64_TO_INT16 instruction);
    public abstract void Generate(INSTR_INT64_TO_UINT16 instruction);
    public abstract void Generate(INSTR_INT64_TO_INT32 instruction);
    public abstract void Generate(INSTR_INT64_TO_UINT32 instruction);
    public abstract void Generate(INSTR_INT64_TO_UINT64 instruction);
    public abstract void Generate(INSTR_INT64_TO_FLOAT instruction);
    public abstract void Generate(INSTR_INT64_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_UINT64_TO_BOOL instruction);
    public abstract void Generate(INSTR_UINT64_TO_INT8 instruction);
    public abstract void Generate(INSTR_UINT64_TO_UINT8 instruction);
    public abstract void Generate(INSTR_UINT64_TO_INT16 instruction);
    public abstract void Generate(INSTR_UINT64_TO_UINT16 instruction);
    public abstract void Generate(INSTR_UINT64_TO_INT32 instruction);
    public abstract void Generate(INSTR_UINT64_TO_UINT32 instruction);
    public abstract void Generate(INSTR_UINT64_TO_INT64 instruction);
    public abstract void Generate(INSTR_UINT64_TO_FLOAT instruction);
    public abstract void Generate(INSTR_UINT64_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_FLOAT_TO_BOOL instruction);
    public abstract void Generate(INSTR_FLOAT_TO_INT8 instruction);
    public abstract void Generate(INSTR_FLOAT_TO_UINT8 instruction);
    public abstract void Generate(INSTR_FLOAT_TO_INT16 instruction);
    public abstract void Generate(INSTR_FLOAT_TO_UINT16 instruction);
    public abstract void Generate(INSTR_FLOAT_TO_INT32 instruction);
    public abstract void Generate(INSTR_FLOAT_TO_UINT32 instruction);
    public abstract void Generate(INSTR_FLOAT_TO_INT64 instruction);
    public abstract void Generate(INSTR_FLOAT_TO_UINT64 instruction);
    public abstract void Generate(INSTR_FLOAT_TO_DOUBLE instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_BOOL instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_INT8 instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_UINT8 instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_INT16 instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_UINT16 instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_INT32 instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_UINT32 instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_INT64 instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_UINT64 instruction);
    public abstract void Generate(INSTR_DOUBLE_TO_FLOAT instruction);

  }
}
