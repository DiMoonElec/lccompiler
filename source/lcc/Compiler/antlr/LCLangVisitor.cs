//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LCLang.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LCLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface ILCLangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilationUnit([NotNull] LCLangParser.CompilationUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.compilationUnitElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilationUnitElement([NotNull] LCLangParser.CompilationUnitElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] LCLangParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.functionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParameters([NotNull] LCLangParser.FunctionParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParameter([NotNull] LCLangParser.FunctionParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompoundStatement([NotNull] LCLangParser.CompoundStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.blockItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockItemList([NotNull] LCLangParser.BlockItemListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.blockItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockItem([NotNull] LCLangParser.BlockItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] LCLangParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.labeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabeledStatement([NotNull] LCLangParser.LabeledStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.labelCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabelCase([NotNull] LCLangParser.LabelCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.labelDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabelDefault([NotNull] LCLangParser.LabelDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectionStatement([NotNull] LCLangParser.SelectionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.selectionIFStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectionIFStatement([NotNull] LCLangParser.SelectionIFStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.selectionSwitchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectionSwitchStatement([NotNull] LCLangParser.SelectionSwitchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIterationStatement([NotNull] LCLangParser.IterationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.iterationWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIterationWhileStatement([NotNull] LCLangParser.IterationWhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.iterationDoStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIterationDoStatement([NotNull] LCLangParser.IterationDoStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.iterationForStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIterationForStatement([NotNull] LCLangParser.IterationForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.forSections"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForSections([NotNull] LCLangParser.ForSectionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.forInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInitializer([NotNull] LCLangParser.ForInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.forInitializerItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInitializerItem([NotNull] LCLangParser.ForInitializerItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCondition([NotNull] LCLangParser.ForConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.forIteratorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForIteratorExpression([NotNull] LCLangParser.ForIteratorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.forIteratorExpressionItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForIteratorExpressionItem([NotNull] LCLangParser.ForIteratorExpressionItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJumpStatement([NotNull] LCLangParser.JumpStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.jumpContinue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJumpContinue([NotNull] LCLangParser.JumpContinueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.jumpBreak"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJumpBreak([NotNull] LCLangParser.JumpBreakContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.jumpReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJumpReturn([NotNull] LCLangParser.JumpReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.useDirectives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUseDirectives([NotNull] LCLangParser.UseDirectivesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.useDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUseDirective([NotNull] LCLangParser.UseDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.objectPath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectPath([NotNull] LCLangParser.ObjectPathContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.structDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDeclarationStatement([NotNull] LCLangParser.StructDeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.structDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDeclaration([NotNull] LCLangParser.StructDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.structDeclarationElements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDeclarationElements([NotNull] LCLangParser.StructDeclarationElementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.structDeclarationElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDeclarationElement([NotNull] LCLangParser.StructDeclarationElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.varableDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarableDeclarationStatement([NotNull] LCLangParser.VarableDeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.varableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarableDeclaration([NotNull] LCLangParser.VarableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.attributeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttributeSpecifier([NotNull] LCLangParser.AttributeSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.varableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarableDeclarator([NotNull] LCLangParser.VarableDeclaratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializer([NotNull] LCLangParser.InitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.groupInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupInitializer([NotNull] LCLangParser.GroupInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.groupInitializerItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupInitializerItems([NotNull] LCLangParser.GroupInitializerItemsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.groupInitializerItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupInitializerItem([NotNull] LCLangParser.GroupInitializerItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.lcStructElementType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcStructElementType([NotNull] LCLangParser.LcStructElementTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.lcFunctionParamType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcFunctionParamType([NotNull] LCLangParser.LcFunctionParamTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.lcVariableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcVariableType([NotNull] LCLangParser.LcVariableTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.lcPrimitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcPrimitiveType([NotNull] LCLangParser.LcPrimitiveTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.lcRefArrayPrimitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcRefArrayPrimitiveType([NotNull] LCLangParser.LcRefArrayPrimitiveTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.lcArrayPrimitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcArrayPrimitiveType([NotNull] LCLangParser.LcArrayPrimitiveTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.lcUserType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcUserType([NotNull] LCLangParser.LcUserTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.arrayIndexer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayIndexer([NotNull] LCLangParser.ArrayIndexerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.expressionSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionSequence([NotNull] LCLangParser.ExpressionSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] LCLangParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprBaseConstant</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprBaseConstant([NotNull] LCLangParser.ExprBaseConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprElementAccess</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprElementAccess([NotNull] LCLangParser.ExprElementAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprCall</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprCall([NotNull] LCLangParser.ExprCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprPostfix</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprPostfix([NotNull] LCLangParser.ExprPostfixContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprPrefix</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprPrefix([NotNull] LCLangParser.ExprPrefixContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprIdentifier</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprIdentifier([NotNull] LCLangParser.ExprIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprParens</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprParens([NotNull] LCLangParser.ExprParensContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprTypeCast</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprTypeCast([NotNull] LCLangParser.ExprTypeCastContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprUnary</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprUnary([NotNull] LCLangParser.ExprUnaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprIndex</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprIndex([NotNull] LCLangParser.ExprIndexContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprInfix</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprInfix([NotNull] LCLangParser.ExprInfixContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprConstant</c>
	/// labeled alternative in <see cref="LCLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprConstant([NotNull] LCLangParser.ExprConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.varMemoryLocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarMemoryLocation([NotNull] LCLangParser.VarMemoryLocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.baseConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBaseConstant([NotNull] LCLangParser.BaseConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] LCLangParser.ConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.intConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntConstant([NotNull] LCLangParser.IntConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LCLangParser.floatConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatConstant([NotNull] LCLangParser.FloatConstantContext context);
}
